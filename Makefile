include config.mk

.PHONY: all clean build minify-css minify-html obfuscate-js obfuscate-html-inline hash-assets lint
all: clean build minify-css minify-html obfuscate-js obfuscate-html-inline hash-assets
	@echo "üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–∞–π–ª—ã –≤ $(BUILD_DIR)/"

clean:
	rm -rf $(BUILD_DIR)

build:
	@echo "üì¶ –ü–æ–∏—Å–∫ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤..."
	@mkdir -p $(BUILD_DIR)
	# –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ SRC_DIR –∏ –∫–æ–ø–∏—Ä—É–µ–º –∏—Ö –≤ BUILD_DIR, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
	@cd $(SRC_DIR) && find . -type f \
		-name "*.html" -o \
		-name "*.css" -o \
		-name "*.js" -o \
		-name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" -o -name "*.webp" \
		| cpio -pdm ../$(BUILD_DIR)

minify-css:
	@echo "üßº –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è CSS..."
	@find $(BUILD_DIR) -type f -name '*.css' $(foreach f,$(IGNORE_CSS),-not -name $(f)) \
		-print | while read file; do \
		npx clean-css-cli -o $$file $$file; \
		echo "‚úî –ú–∏–Ω.: $$file"; \
	done

minify-html:
	@echo "üßº –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è HTML..."
	@find $(BUILD_DIR) -type f -name '*.html' $(foreach f,$(IGNORE_HTML),-not -name $(f)) \
		-print | while read file; do \
		$(HTMLMIN) $$file -o $$file $(HTML_MIN_OPTS); \
		echo "‚úî –ú–∏–Ω.: $$file"; \
	done

obfuscate-js:
	@echo "üîê –û–±—Ñ—É—Å–∫–∞—Ü–∏—è JS-—Ñ–∞–π–ª–æ–≤..."
	@find $(BUILD_DIR) -type f -name '*.js' $(foreach f,$(IGNORE_JS),-not -name $(f)) \
		-print | while read file; do \
		$(JSOBF) $$file --output $$file --config obfuscator.json; \
		echo "‚úî –û–±—Ñ.: $$file"; \
	done

obfuscate-html-inline:
	@echo "üîç –û–±—Ñ—É—Å–∫–∞—Ü–∏—è inline-—Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ HTML..."
	node scripts/obfuscate-html-inline.js $(BUILD_DIR)

hash-assets:
	@echo "üîó –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Å—Å–µ—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫..."
	node scripts/hash-assets.js $(BUILD_DIR)

lint:
	npx eslint src/js && npx stylelint "src/css/**/*.css" && npx htmlhint src/html
